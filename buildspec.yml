version: 0.2

env:
  variables:
    # These can be overridden in CodeBuild project settings
    AWS_DEFAULT_REGION: ap-southeast-1
    AWS_ACCOUNT_ID: "250370816065"
    ECR_REPO_NAME: "static-website-repo"

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo Logging in to Amazon ECR...
      
  pre_build:
    commands:
      # Log in to Amazon ECR using the AWS CLI
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      # Retrieve the Git tag associated with the current commit
      - GIT_TAG=$(git describe --tags --exact-match 2>/dev/null || echo "latest")
      - echo Build started on `date`
      - echo Building the Docker image with tag $GIT_TAG
      
  build:
    commands:
      # Build the Docker image using the provided Dockerfile and tag it with "latest"
      - docker build -t $ECR_REPO_NAME:latest .
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      # Tag the Docker image with ECR repository URL for the Git tag
      - docker tag $ECR_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME:$GIT_TAG
      # Tag the Docker image with ECR repository URL for "latest"
      - docker tag $ECR_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME:latest
      # Push the Docker image with the Git tag to Amazon ECR
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME:$GIT_TAG
      # Push the Docker image with "latest" tag to Amazon ECR
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME:latest
      - echo Docker image pushed successfully

artifacts:
  files:
    - '**/*'
  name: BuildArtifact

cache:
  paths:
    - '/root/.cache/**/*'
